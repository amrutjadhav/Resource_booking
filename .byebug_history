exit
@ongoing_bookings
@ongoin_bookings
exit
Time.now.min.between?(start_min,end_min)
end_min != 0 and Time.now.min.between?(start_min,end_min)
Time.now.hour.between?(start_hour,end_hour) and end_hour != 0
end_hour = start_time.hour + (booking.slot + 1) * timeslot_hour + carry_end_hours
carry_end_hours = (start_time.min + (booking.slot + 1) * timeslot_min) / 60
end_min = (start_time.min + (booking.slot + 1) * timeslot_min) % 60
start_hour = start_time.hour + (booking.slot) * timeslot_hour + carry_hours
carry_hours = (start_time.min + (booking.slot) * timeslot_min) / 60
start_min = (start_time.min + (booking.slot) * timeslot_min) % 60
start_time = booking.company.start_time
timeslot_hour = resource.time_slot.hour
timeslot_min = resource.time_slot.min
resource = booking.resource
booking = granted.last
current_bookings = []
granted = bookings_of_today.where(status:1)
bookings_of_today = Booking.where("date_of_booking = ?",Date.today)
@ongoing_bookings
exit
@ongoing_bookings
Time.now.hour.between?(start_hour,end_hour) and end_hour != 0
end_min != 0 and Time.now.min.between?(start_min,end_min)
Time.now.hour.between?(start_hour,23) and end_hour == 0
Time.now.min.between?(start_min,59) and end_min == 0
end_hour == 0
Time.now.hour.between?(start_hour,23)
Time.now.hour.between?(start_hour,end_hour)
end_hour = start_time.hour + (booking.slot + 1) * timeslot_hour + carry_end_hours
carry_end_hours = (start_time.min + (booking.slot + 1) * timeslot_min) / 60
end_min = (start_time.min + (booking.slot + 1) * timeslot_min) % 60
start_hour = start_time.hour + (booking.slot) * timeslot_hour + carry_hours
carry_hours = (start_time.min + (booking.slot) * timeslot_min) / 60
start_min = (start_time.min + (booking.slot) * timeslot_min) % 60
start_time = booking.company.start_time
timeslot_hour = resource.time_slot.hour
timeslot_min = resource.time_slot.min
resource = booking.resource
booking = granted.first
current_bookings = []
current_bookings
granted = bookings_of_today.where(status:1)
bookings_of_today = Booking.where("date_of_booking = ?",Date.today)
@ongoing_bookings
n
nn
n
s
ss
s
n
exit
n
granted.count
granted
n
bookings_of_today.count
bookings_of_today
n
exit
timeslot_min = resource.time_slot.min
resource = booking.resource
booking= granted.first
booking
granted.count
granted = bookings_of_today.where(status:1)
bookings_of_today = Booking.where("date_of_booking = ?",Date.today)
@ongoing_bookings.count
@ongoing_bookings
@bookings
exit
current_bookings
exit
current_bookings = []
Time.now.hour.between?(start_hour,23) and end_hour == 0
Time.now.hour.between?(start_hour,end_hour)
end_hour = start_time.hour + (booking.slot + 1) * timeslot_hour + carry_end_hours
carry_end_hours = (start_time.min + (booking.slot + 1) * timeslot_min) / 60
end_min = (start_time.min + (booking.slot + 1) * timeslot_min) % 60
start_hour = start_time.hour + (booking.slot) * timeslot_hour + carry_hours
carry_hours = (start_time.min + (booking.slot) * timeslot_min) / 60
start_min = (start_time.min + (booking.slot) * timeslot_min) % 60
start_time = booking.company.start_time
timeslot_hour = resource.time_slot.hour
timeslot_min = resource.time_slot.min
booking = granted.first
current_bookings = []
granted = bookings_of_today.where(status:1)
bookings_of_today = Booking.where("date_of_booking = ?",Date.today)
exit
Time.now.hour.between?(start_hour,23)
Time.now.hour.between?(start_hour,end_hour)
end_hour = start_time.hour + (booking.slot + 1) * timeslot_hour + carry_end_hours
carry_end_hours = (start_time.min + (booking.slot + 1) * timeslot_min) / 60
end_min = (start_time.min + (booking.slot + 1) * timeslot_min) % 60
start_hour = start_time.hour + (booking.slot) * timeslot_hour + carry_hours
carry_hours = (start_time.min + (booking.slot) * timeslot_min) / 60
start_min = (start_time.min + (booking.slot) * timeslot_min) % 60
start_time = booking.company.start_time
timeslot_hour = resource.time_slot.hour
timeslot_min = resource.time_slot.min
resource = booking.resource
timeslot_min = resource.time_slot.min
booking = granted.first
granted = bookings_of_today.where(status:1)
granted
booking = granted[0]
booking = granted.first
granted = bookings_of_today.where(status:1).count
granted = bookings_of_today.where(status:1)
bookings_of_today = Booking.where("date_of_booking = ?",Date.today)
Booking.ongoing_bookings
@ongoing_bookings
exit
eexit
@ongoing_bookings
exit
@ongoing_bookings.count
@ongoing_bookings
exit
current_bookings.count
current_bookings
exit
bookings_of_today
current_bookings
exit
current_bookings
exit
current_bookings
exit
@booking
exit
@booking
<<<<<<< HEAD
exit
@resource.time_slot.min
@resource.time_slot.hour
@resource.time_slot
@resource
exit
continue
n
company.roles.count
n
employee
admin_role_id
company
!employee.new_record?
employee.new_record?
employee
continue
@resource.time_slot.strftime("%H")
@resource.time_slots.strftime("%H")
@resource
@resourcce
n
params
continue
resource
continue
@resource
params
@resource
continue
n
<<<<<<< HEAD
continue
n
employee
exit
remember_hour
time_slot_array
exit
remember_hour
s
time_slot_array
s
time_slot_array
remember_min
s
remember_hour
remember_min
s
time_slot_array
s
remember_min
s
remember_hour
s
time_slot_array
exit
s
time_slot_array
exit
time_slot_array << ["#{6}:#{30}-#{((30 + self.time_slot.min)/60 )+6+self.time_slot.hour}:#{(30 + self.time_slot.min) % 60}", 1]
time_slot_array << ["#{remember_hour}:#{remember_min}-#{((remember_min + self.time_slot.min)/60 )+remember_hour+self.time_slot.hour}:#{(remember_min + self.time_slot.min) % 60}", 0]
time_slot_array << ["#{remember_hour}:#{remember_min}-#{((remember_min + self.time_slot.min)/60 )+remember_hour+self.time_slot.hour}:#{(remember_min + self.time_slot.min) % 60}", index]
time_slot_array
exit
no_of_slots
remember_min
remember_hour
exit
remember_min
remember_hour
time_slot_array
exit
remember_min = (remember_min + self.time_slot.min) % 60
((remember_min + self.time_slot.min)/60 )+remember_hour+self.time_slot.hour
((remember_min + self.time_slot.min)/60 )
remember_min
time_slot_arr
time_slot_array << ["#{remember_hour}:#{remember_min}-#{((remember_min + self.time_slot.min)/60 )+remember_hour+self.time_slot.hour}:#{(remember_min + self.time_slot.min) % 60}", index]
self.time_slot.min
remember_hour
time_slot_array
time_slot_array << ["#{remember_hour}:#{remember_min}-#{((remember_min + self.time_slot.min)/60 )+remember_hour+self.time_slot.hour}:#{(remember_min + self.time_slot.min) % 60}", index]
exit
time_slot_array
exit
remember_min = (remember_min + self.time_slot.min) % 60
remember_hour = ((remember_min + self.time_slot.min)/60 )+remember_hour+self.time_slot.hour
exit
time_slot_array
exit
time_slot_array
exit
time_slot_array
exit
time_slot_array
exit
time_slot_array
exit
time_slot_array
exit
remember_min = (remember_min + self.time_slot.min) % 60
remember_hour = ((remember_min + self.time_slot.min)/60 )+remember_hour+self.time_slot.hour
time_slot_array << ["#{remember_hour}:#{remember_min}-#{((remember_min + self.time_slot.min)/60 )+remember_hour+self.time_slot.hour}:#{(remember_min + self.time_slot.min) % 60}", index]
no_of_slots.times do | index |
remember_min = start_time.min
remember_hour = start_time.hour
time_slot_array =Array.new
(self.time_slot.hour*60 + self.time_slot.min)
no_of_slots = ( company_duration / (self.time_slot.hour*60 + self.time_slot.min) ).to_i
company_duration = (( end_time - start_time )/60).round(2)
company
exit
company_duration
no_of_slots = ( company_duration / self.time_slot ).to_i
company_duration = (( end_time - start_time )/3600).round(2)
company_duration
no_of_slots = ( company_duration / self.time_slot ).to_i
company
