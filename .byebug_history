c
subject.current_employee.bookings.create(resource_id: 1, comment: "conference", date_of_booking: Date.tomorrow, slot:0)
subject.current_employee
Booking.new(resource_id: 1, comment: "conference", date_of_booking: Date.tomorrow, slot:0)
@booking.new(resource_id: 1, comment: "conference", date_of_booking: Date.tomorrow, slot:0)
@booking.new
@booking.class

@booking = subject.current_employee.bookings.create(resource_id: 1, comment: "conference", date_of_booking: Date.tomorrow, slot:0)
continue
patch :update, :id => @employee.id, employee: update_params
continue
Employee.last
 Employee.find_by_name("hello")
 Employee.find_by_name("sayali")
@employee
continue
a.errors
a.valid?
a.errors
a.resource_id = @resource.id
@employee.bookings.new({comment: "hello",feedback: "",employee_id:6,date_of_booking: Date.today, slot: 0})
a.errors
a.valid?
a.vali?
a.resource_id = @resource.id
a.errors
a.valid?
a = @employee.bookings.new({comment: "hello",feedback: "",employee_id:6,date_of_booking: Date.today, slot: 7})
@employee.bookings.new({comment: "hello",feedback: "",employee_id:6,date_of_booking: Date.today, slot: 7})
build(:booking ,date_of_booking:Date.today,slot:7, employee_id: @employee.id)
build(:booking ,date_of_booking:Date.today,slot:7, employee: @employee)
build(:booking ,date_of_booking:Date.today,slot:7,company_id:@company.id)
continue
 build(:booking , company: @company)
continue
@book
build(:booking ,date_of_booking:Date.today,slot:7, company: @company)
exit
continue
resource_slot
continue
resource_slot
continue
@booking.date_of_booking.gsub(/[-]+/,"").to_i != Time.zone.now.strftime("%Y%m%d").to_i
a.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d"))
@booking.date_of_booking.strftime("%Y%m%d")
a.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d") )
a = Resource.find(@booking.resource.id)
Resource.find(@booking.resource)
@resource.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d") )
@booking.resource.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d"))
@resource.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d") )
@resource
@booking.resource.avail
@booking.resource.next_time_slots
@resource.next_time_slots.first[1] == @booking.slot
@resource.next_time_slots
@resource.next_resource_slots
a
continue
Booking.ongoing_bookings(@company)
continue
Booking.ongoing_bookings(@company)
a
continue
@booking.resource.next_time_slots
@resource.next_time_slots
@resource == @booking.resource
a.next_time_slots
a = @booking.resource
@booking.resource
@booking.resource.next_time_slots
@resource.next_time_slots
@booking.resource.timeslots.first
@booking.resource.timeslots[@booking.slot]
@booking.resource.timeslots
@booking.resource.timeslots[@booking.slot-1]
@booking.resource.timeslots[@booking.slot.to_i]
@booking.slot
@booking.resource.timeslots[@booking.slot]
@booking.resource.timeslots
@booking.resource.timeslots[@booking.slot]
@resource.next_time_slots
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@bo
unless false
@resource.timeslots
Booking.ongoing_bookings(@company)
@booking.resource.next_time_slots.include?(@booking.resource.timeslots[@booking.slot])
@booking.resource.next_time_slots.include?(@booking.resource.timeslots[@booking.slot]
@booking.date_of_booking != Time.zone.now.beginning_of_day
continue
Time.now
@resource.timeslots
@company
@booking.errors
a
continue
@booking.errors
a
continue
@company
@booking.errors
a
Booking.ongoing_bookings(@company)
continue
@booking.errors
a
Booking.ongoing_bookings(@company)
continue
@company
@resource
@company
@booking.errors
a
continue
2.hours.from_now
Time.now.after(2.hours)
Time.now
@booking.errors
a
continue
Time.new(2016,12,3,[0,1,2,3].sample,(0..59).to_a.sample)
@resource.time_slot
@resource
continue
@role.errors.messages
a
continue
<<<<<<< HEAD
@role.errors
a.errors
a
continue
a
continue
@role.errors.messages.has_key?(:admin_designation)
@role.errors.messages.has_key?("admin_designation")
@role.errors.messages.has_key("admin_designation")
@role.errors.messages
@role.errors.messages[:admin_designation].first
@role.errors.messages[:admin_designation]
@role.errors.messages.admin_designation
@role.errors.messages[:admin_designation]
@role.errors.messages[:admin_designation
@role.errors.messages
@role.errors
@role.errrors
@role.errors
a
continue
@employee.errors
a
@employee.email
continue
@employee
a
continue
"sayali@GMAIL.com" == "sayali@gmail.com"
"sayali@GMAIL.com" == "sayali@GMAIL.com"
@employee.email
a.email
a
continue
a
continue
@employee.errors
a.errors
a
continue
a
continue
@employee.name
@employee
continue
@employee
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
self
name
continue
no_of_slots = ( company_duration / (@resource.time_slot.hour*60 + @resource.time_slot.min) ).to_i
no_of_slots = ( company_duration / (self.time_slot.hour*60 + self.time_slot.min) ).to_i
company_duration = (( end_time - start_time )/60).round(2)
end_time = company.end_time
start_time = company.start_time
undefined local variable or method `byebug' for #<RSpec
company = @resource.company
@resource.company
@resource
array
continue
n
continue
n
array
continue
array
continue
@company.is_resource_available?
@booking
continue
n
nn
n
nn
n
nn
n
@bookings
@company.is_resource_available?
@company
continue
=======
>>>>>>> 7100172608f0c8c0cc887e121430000c55ad5f3a
n
employee.new_record?
employee
continue
employee.role_id == admin_role_id
 admin_role_id = company.roles.find_by_designation("admin").id
company = employee.company
continue
nn
n
nn
n
render plain: "hello"
current_employee
continue
n
current_employee
continue
<<<<<<< HEAD
=======
>>>>>>> 7100172608f0c8c0cc887e121430000c55ad5f3a
self.slot%1!=0
self.resource.available_time_slot(self.date_of_booking.strftime("%Y%m%d") ).length || self.slot%1!=0
