assert_redirected_to company_path
q
get :show, :id => @company.id
@company.id
continue
@company
continue
@company
continue
@company
continue
@company
continue
assert_redirected_to company_path(Company.last.id)
Company.last.id
continue
assert_redirected_to company_path(company.last.id)
continue
Company.last
continue
@company.valid?
@company.valid/
continue
a
continue
expect(response).to render_template("edit")
q
patch :update, :id => @booking.id, booking: update_params
a
continue
@booking = subject.current_employee.bookings.last
continue
expect(response).to render_template("show")
q
get :show, :id => subject.current_employee.bookings.last.id
subject.current_employee.bookings.last.id
n
continue
@booking
continue
@booking.valid?
@booking = subject.current_employee.bookings.build(resource_id:@resource.id, comment:"bdhbc",date_of_booking:"2016-10-15",slot:0)
subject.current_employee.bookings.build(resource_id:@resource.id, comment:"bdhbc",date_of_booking:"2016-10-15",slot:0)
continue
subject.current_employee.bookings
continue
subject.current_employee.bookings
continue
Booking.where(employee_id:6284)
Bookings.where(employee_id:6284)
subject.current_employee.bookings
Booking
subject.current_employee.bookings
continue
subject.current_employee.bookings
subject.current_employee
continue
Booking.last
Booking
Booking.last
subject.current_employee.bookings
subject.current_employee.bookings.last.id
continue
@booking.valid?
n
continue
@company.resources.all
@company
Resource.last
Resource
@booking.errors
@booking.valid?
n
continue
@booking.errors
@booking.valid?
n
@booking = current_employee.bookings.build(booking_params)
n
continue
Booking.all.count
Booking.last
Booking
Booking.last
booking.last
ooking.last
q
post :create, booking: params
n
continue
n
 @company.employees.find(params[:id])
continue
 @company.employees.find(params[:id])
continue
n
nn
n
 @company.employees.destroy(params[:id])
continue
@company.employees.destroy(params[:id])
continue
n
nn
n
nn
n
assert_redirected_to admin_employees_path
continue
n
@employee.update_attributes(employee_params)
employee_params
continue
employee_params
@employee.update_attributes(employee_params)
continue
post :change_status, params
n
continue
Complaint.find(3251)
@company.complaints.find(3251)
@company.complaints
@company
Complaint.find(3251)
@complaint.errors
@complaint.valid?
@complaint
post :change_status, params
params
n
@complaint
continue
@complaint
params
continue
params
continue
subject.current_employee.complaints.create(resource_id: resource.id, comment: "conference")
@complaint.errors
@complaint.valid?
@complaint
params
params[:status_complaint]
continue
params[:status_complaint]
continue
@complaint
params[:status_complaint]
params
continue
params
continue
params
params[:status_complaint]
continue
params[:status]
params[:status][:booking_id]
params[:commit]
continue
params[:commit]
params[:status][:booking_id]
params[:status]
continue
params[:commit]
continue
params
params[:commit]
 @company.bookings.find(params[:status][:booking_id])
params[:status]
continue
params["booking_id"]
params
params[:booking_id]
params
booking = @company.bookings.find(params[:booking_id].to_i)
@company
Booking.find(24)
@booking
booking = @company.bookings.find(params[:booking_id])
params
params[:status]
@booking
post :change_status, status: params
continue
a
continue
@employee1.errors
a
continue
@employee1.errors
a
c
subject.current_employee.bookings.create(resource_id: 1, comment: "conference", date_of_booking: Date.tomorrow, slot:0)
subject.current_employee
Booking.new(resource_id: 1, comment: "conference", date_of_booking: Date.tomorrow, slot:0)
@booking.new(resource_id: 1, comment: "conference", date_of_booking: Date.tomorrow, slot:0)
@booking.new
@booking.class
@booking = subject.current_employee.bookings.create(resource_id: 1, comment: "conference", date_of_booking: Date.tomorrow, slot:0)
continue
patch :update, :id => @employee.id, employee: update_params
continue
Employee.last
 Employee.find_by_name("hello")
 Employee.find_by_name("sayali")
@employee
continue
a.errors
a.valid?
a.errors
a.resource_id = @resource.id
@employee.bookings.new({comment: "hello",feedback: "",employee_id:6,date_of_booking: Date.today, slot: 0})
a.errors
a.valid?
a.vali?
a.resource_id = @resource.id
a.errors
a.valid?
a = @employee.bookings.new({comment: "hello",feedback: "",employee_id:6,date_of_booking: Date.today, slot: 7})
@employee.bookings.new({comment: "hello",feedback: "",employee_id:6,date_of_booking: Date.today, slot: 7})
build(:booking ,date_of_booking:Date.today,slot:7, employee_id: @employee.id)
build(:booking ,date_of_booking:Date.today,slot:7, employee: @employee)
build(:booking ,date_of_booking:Date.today,slot:7,company_id:@company.id)
continue
 build(:booking , company: @company)
continue
@book
build(:booking ,date_of_booking:Date.today,slot:7, company: @company)
exit
continue
resource_slot
continue
resource_slot
continue
@booking.date_of_booking.gsub(/[-]+/,"").to_i != Time.zone.now.strftime("%Y%m%d").to_i
a.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d"))
@booking.date_of_booking.strftime("%Y%m%d")
a.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d") )
a = Resource.find(@booking.resource.id)
Resource.find(@booking.resource)
@resource.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d") )
@booking.resource.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d"))
@resource.available_time_slot(@booking.date_of_booking.strftime("%Y%m%d") )
@resource
@booking.resource.avail
@booking.resource.next_time_slots
@resource.next_time_slots.first[1] == @booking.slot
@resource.next_time_slots
@resource.next_resource_slots
a
continue
Booking.ongoing_bookings(@company)
continue
Booking.ongoing_bookings(@company)
a
continue
