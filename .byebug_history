continue
@role.errors
a.errors
a
continue
a
continue
@role.errors.messages.has_key?(:admin_designation)
@role.errors.messages.has_key?("admin_designation")
@role.errors.messages.has_key("admin_designation")
@role.errors.messages
@role.errors.messages[:admin_designation].first
@role.errors.messages[:admin_designation]
@role.errors.messages.admin_designation
@role.errors.messages[:admin_designation]
@role.errors.messages[:admin_designation
@role.errors.messages
@role.errors
@role.errrors
@role.errors
a
continue
@employee.errors
a
@employee.email
continue
@employee
a
continue
"sayali@GMAIL.com" == "sayali@gmail.com"
"sayali@GMAIL.com" == "sayali@GMAIL.com"
@employee.email
a.email
a
continue
a
continue
@employee.errors
a.errors
a
continue
a
continue
@employee.name
@employee
continue
@employee
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
continue
self.name
self
name
continue
no_of_slots = ( company_duration / (@resource.time_slot.hour*60 + @resource.time_slot.min) ).to_i
no_of_slots = ( company_duration / (self.time_slot.hour*60 + self.time_slot.min) ).to_i
company_duration = (( end_time - start_time )/60).round(2)
end_time = company.end_time
start_time = company.start_time
undefined local variable or method `byebug' for #<RSpec
company = @resource.company
@resource.company
@resource
array
continue
n
continue
n
array
continue
array
continue
@company.is_resource_available?
@booking
continue
n
nn
n
nn
n
nn
n
@bookings
@company.is_resource_available?
@company
continue
n
employee.new_record?
employee
continue
employee.role_id == admin_role_id
 admin_role_id = company.roles.find_by_designation("admin").id
company = employee.company
continue
nn
n
nn
n
render plain: "hello"
current_employee
continue
n
current_employee
continue
self.slot%1!=0
self.resource.available_time_slot(self.date_of_booking.strftime("%Y%m%d") ).length || self.slot%1!=0
continue
self.date_of_booking.strftime("%Y%m%d").length
self.date_of_booking.strftime("%Y%m%d")
self.resource.available_time_slot(self.date_of_booking.strftime("%Y%m%d").length)
self.resource.available_time_slot
self.resource
self.slot.to_i
self.slot
self
continue
@company.employees.find_by(name:"admin")
@company.employees.find(name:"admin")
@company.employees
@company
continue
n
current_employee
@company
n
continue
@company.is_resource_available?
@company
current_employee.company.bookings
current_employee
@bookings
n
reload
reload!
@bookings
@company
n
current_employee
@company
Company.find(48)
@company
n
current_employee.company
current_employee
self
continue
@company
continue
@company
n
@company
current_employee.company
current_employee
continue
current_employee.company
Company.find(48)
@company
n
current_employee
continue
@bookings
@bookings.where("date_of_booking >= ?",Date.today).count
@bookings.count
@bookings
 if @bookings
n
@company.is_resource_available?
@company
n
@company = current_employee.company
continue
n
@company.is_resource_available?
@company
n
@company = current_employee.company
continue
@employee = self.employees.new(name: "admin",email: self.email ,age:22,date_of_joining: Date.today)
@employee
self.email
self
params[:phone_full].value
params[:phone_full]
params
continue
params
continue
params
continue
params
continue
params[:phone_full]
params
continue
@employee.errors
n
@employee.errors
@employee
continue
n
x
n
x.errors
x.class
x
n
continue
n
x
x.errors
n
empty_role_id
n
continue
x.errors
n
x
n
empty_role_id
n
continue
@confirmable.errors.add(:email)
@confirmable.errors.add
@confirmable.errors
@confirmable
devise_error_messages!
devise_error_messages
resource
resource.errors
continue
resource.errors
continue
resource.errors
continue
resource.errors
resource.attribute_names
resource.password
resource
continue
a
