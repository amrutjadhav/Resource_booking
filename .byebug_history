continue
n
employee.new_record?
employee
continue
employee.role_id == admin_role_id
 admin_role_id = company.roles.find_by_designation("admin").id
company = employee.company
continue
nn
n
nn
n
render plain: "hello"
current_employee
continue
n
current_employee
continue

self.slot%1!=0
self.resource.available_time_slot(self.date_of_booking.strftime("%Y%m%d") ).length || self.slot%1!=0
continue
self.date_of_booking.strftime("%Y%m%d").length
self.date_of_booking.strftime("%Y%m%d")
self.resource.available_time_slot(self.date_of_booking.strftime("%Y%m%d").length)
self.resource.available_time_slot
self.resource
self.slot.to_i
self.slot
self
continue
@company.employees.find_by(name:"admin")
@company.employees.find(name:"admin")
@company.employees
@company
continue
n
current_employee
@company
n
continue
@company.is_resource_available?
@company
current_employee.company.bookings
current_employee
@bookings
n
reload
reload!
@bookings
@company
n
current_employee
@company
Company.find(48)
@company
n
current_employee.company
current_employee
self
continue
@company
continue
@company
n
@company
current_employee.company
current_employee
continue
current_employee.company
Company.find(48)
@company
n
current_employee
continue
@bookings
@bookings.where("date_of_booking >= ?",Date.today).count
@bookings.count
@bookings
 if @bookings
n
@company.is_resource_available?
@company
n
@company = current_employee.company
continue
n
@company.is_resource_available?
@company
n
@company = current_employee.company
continue
@employee = self.employees.new(name: "admin",email: self.email ,age:22,date_of_joining: Date.today)
@employee
self.email
self
params[:phone_full].value
params[:phone_full]
params
continue
params
continue
params
continue
params
continue
params[:phone_full]
params
continue
@employee.errors
n
@employee.errors
@employee
continue
n
x
n
x.errors
x.class
x
n
continue
n
x
x.errors
n
empty_role_id
n
continue
x.errors
n
x
n
empty_role_id
n
continue
@confirmable.errors.add(:email)
@confirmable.errors.add
@confirmable.errors
@confirmable
devise_error_messages!
devise_error_messages
resource
resource.errors
continue
resource.errors
continue
resource.errors
continue
resource.errors
resource.attribute_names
resource.password
resource
continue
a
continue
record_emp.errors
a
continue
@company.employees.where(manager_id:params[:id]).each do | record_emp |
@company.employees.where(manager_id:params[:id]).count
@company.employees.where(manager_id:params[:id])
@company.bookings.where(employee_id:params[:id]).destroy_all
@company.complaints.where(employee_id:params[:id]).destroy_all
d
@company.employees.destroy(params[:id])
continue
emp
continue
eid
continue
@company.employees.where(name:"admin").first
@company.employees.where(name:"admin")
@company.employees.where(name:admin)
@company
current_employee.company.employees.find(85)
params
current_employee.company.employees
eid
continue
params
eid
current_employee.company.employees
current_employee.company
current_employee
continue
resource.include?(params[:id].to_i)
params[:id]
resource
continue
params
params[:resource_id]
resource.include()
continue
<<<<<<< HEAD
resource.errors
resource
continue
resource
e.errors
e = Employee.last
Employee.last
resource.errors
continue
resource.errors
resource
f.error_notification
exit
form.password
form
n
continue
@booking.errors
n
@booking
exit
company.roles
company
exit
current_employee.id
@company.roles
b = Booking.new(status:0, priority:0, feedback:"", comment:"conf", employee_id:57, date_of_booking: Date.today, slot:0, company_id: 20, resource_id:21)
b.valid?
b.vlid?
b = Booking.new(status:0, priority:0, feedback:"", comment:"conf", employee_id:57, date_of_booking: Date.today, slot:0, company_id: 20, resource_id:21)
b Booking.new(status:0, priority:0, feedback:"", comment:"conf", employee_id:57, date_of_booking: Date.today, slot:0, company_id: 20, resource_id:21)
Booking.new(status:0, priority:0, feedback:"", comment:"conf", employee_id:57, date_of_booking: Date.today, slot:0, company_id: 20, resource_id:21)
Booking.new(status:0, priority:0, feedback:"", comment:"conf", employee_id:57, date_of_booking: Date.today, slot:0, company_id: 20, resource_id:211)
Booking
Booking.new
Booking.all.count
Booking.where("date_of_booking < ?",Time.now).count
Booking.where("date_of_booking < ?",Time.now)
Booking.where("date_of_booking < ?",def ongoing_bookings )
Booking.where(date_of_booking < Time.now )
Booking.last.date_of_booking < Time.now
Booking.last.date_of_booking
Booking.last
Booking.last.date
Booking.last.company.start_time.hour
Booking.last.company.start_time
Booking.last.company
Booking.resource
Booking.company
Booking.last.company_id
Booking
slot_min = Resource.find(Booking.last.resource_id).time_slot.min
slot_hour = Resource.find(Booking.last.resource_id).time_slot.hour
slot = Resource.find(Booking.last.resource_id)
b = Booking.last.slot
b = Booking.last
Booking.last
ls
cd
self
slot_no = r.time_slot
r = Resource.find(self.resource_id)
cd last
cd ..
slot_no = r.time_slot
r = Resource.find(self.resource_id)
Resource.find(self.resource_id)
Resource.find(self.re)
self
cd first
first
self
self.new.re
self.resource_id
self
Resource.find(self.resource_id)
Resource.find(resource_id)
first.slot
first
cd Booking
Company.last.start_time
Company.last.start_timee
Company.last
Company.find_by(phone:"+912222222222")
Role.last.id
Role.last
Employee.last
c.resources.count
c.resources
c = Company.find(4)
Company.find(4)
e.save
e.role_id = 4
Role.find(4)
e
e.role_id
@company.roles.find_by_designation("Admin").id
@company = e.company
e.company
@company.roles.find_by_designation("Admin").id
@company = e.company_id
e.role_id
e = Employee.where(email:"admin@facebook.com").first
e.role_id
e = Employee.where(email:"admin@facebook.com")
Employee.where(email:"admin@facebook.com")
e.company.roles.find_by_designation("Admin")
e.company.roles.find(designation:"Admin")
e.company.roles.count
e.company.roles
e.company
e
Role.all.count
Role.all.delete
Role.where(designation:"Admin")
e.role
e.save
e.role_id = 1
e.role = 1
Role.all
e.role
e = Employee.where(email:"admin@facebook.com").first
e = Employee.where(email:"admin@facebook.com")
e.role
e = Employee.where(email:"admin@facebook.com")
Employee.where(email:"admin@facebook.com")
Employee.new
Employee.where(email:"admin@facebook.com")
Employee.last
Resource.new
c.resources
c = Company.find(4)
Company.find(4)
Employee.new
Complaint.new
Employee.find_by_name("moo")
Employee.find(7)
b.where(company_id:4)
b = Booking.where("date_of_booking >= ?",Date.tomorrow)
Booking.where("date_of_booking >= ?",Date.tomorrow)
Booking.where(company_id:4,"date_of_booking >= ?",Date.tomorrow)
Booking.where("date_of_booking >= ?",Date.tomorrow,company_id:4)
last.date_of_booking >= Date.tomorrow
last.date_of_booking > Date.tomorrow
last.date_of_booking
Date.tomorrow
Date.tommorrow
reload!
Date.yesterday
last.date_of_booking < Date.today
last.date_of_booking
